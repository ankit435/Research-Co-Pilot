# Generated by Django 5.1.4 on 2025-01-15 14:13

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=150)),
                ('last_name', models.CharField(blank=True, max_length=150)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('profile_image', models.TextField(blank=True, help_text='Base64 encoded profile image', null=True)),
                ('bio', models.TextField(blank=True, help_text='User biography', null=True)),
                ('last_login_at', models.DateTimeField(blank=True, null=True)),
                ('first_login', models.BooleanField(default=True)),
                ('account_type', models.CharField(choices=[('PERSON', 'Person Account'), ('BOT', 'Bot Account')], default='PERSON', help_text='Type of account (Person or Bot)', max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(help_text='Title of the notification', max_length=255)),
                ('message', models.TextField(help_text='Content of the notification')),
                ('notification_type', models.CharField(choices=[('SYSTEM', 'System Notification'), ('ALERT', 'Alert'), ('MESSAGE', 'Message'), ('UPDATE', 'Update'), ('OTHER', 'Other')], default='SYSTEM', help_text='Type of notification', max_length=20)),
                ('is_read', models.BooleanField(default=False, help_text='Whether the notification has been read')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When the notification was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When the notification was last updated')),
                ('read_at', models.DateTimeField(blank=True, help_text='When the notification was read', null=True)),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Soft delete timestamp', null=True)),
                ('user', models.ForeignKey(help_text='User who receives the notification', on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', '-created_at'], name='accounts_no_user_id_b37b35_idx'), models.Index(fields=['is_read', 'deleted_at'], name='accounts_no_is_read_891b86_idx')],
            },
        ),
    ]
